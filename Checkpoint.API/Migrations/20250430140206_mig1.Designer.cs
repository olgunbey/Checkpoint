// <auto-generated />
using System;
using System.Collections.Generic;
using Checkpoint.API.Data;
using Checkpoint.API.RequestPayloads;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Checkpoint.API.Migrations
{
    [DbContext(typeof(CheckpointDbContext))]
    [Migration("20250430140206_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Checkpoint.API.Entities.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Body>>("Body")
                        .HasColumnType("jsonb");

                    b.Property<int>("ControllerId")
                        .HasColumnType("integer");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<Header>>("Header")
                        .HasColumnType("jsonb");

                    b.Property<List<Query>>("Query")
                        .HasColumnType("jsonb");

                    b.Property<int>("RequestType")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ControllerId");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.BaseUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BasePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("BaseUrl");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Controller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseUrlId")
                        .HasColumnType("integer");

                    b.Property<string>("ControllerPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BaseUrlId");

                    b.ToTable("Controller");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("integer");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Action", b =>
                {
                    b.HasOne("Checkpoint.API.Entities.Controller", "Controller")
                        .WithMany("Actions")
                        .HasForeignKey("ControllerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Controller");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.BaseUrl", b =>
                {
                    b.HasOne("Checkpoint.API.Entities.Project", "Project")
                        .WithMany("BaseUrls")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Controller", b =>
                {
                    b.HasOne("Checkpoint.API.Entities.BaseUrl", "BaseUrl")
                        .WithMany("Controllers")
                        .HasForeignKey("BaseUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseUrl");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.BaseUrl", b =>
                {
                    b.Navigation("Controllers");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Controller", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Checkpoint.API.Entities.Project", b =>
                {
                    b.Navigation("BaseUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
